apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kiali
  labels:
    app: kiali
    version: ${VERSION_LABEL}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kiali
      version: ${VERSION_LABEL}
  template:
    metadata:
      name: kiali
      labels:
        app: kiali
        version: ${VERSION_LABEL}
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxAvailable: 1
      type: RollingUpdate
    spec:
      serviceAccount: kiali-service-account
      containers:
      - image: openshift/oauth-proxy:v1.1.0
        name: kiali-proxy
        args:
        - -provider=openshift
        - -https-address=:20002
        - -http-address=
        - -email-domain=*
        - -upstream=http://localhost:20001
        - -openshift-service-account=kiali
        - '-openshift-sar={"namespace":"istio-system","resource":"services","name":"kiali","verb":"get"}'
        - '-openshift-delegate-urls={"/": {"resource": "namespaces", "verb": "get"}}'
        - -tls-cert=/etc/tls/private/tls.crt
        - -tls-key=/etc/tls/private/tls.key
        - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
        - -openshift-ca=/etc/pki/tls/cert.pem
        - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        - -cookie-secret=kiali-16bytes-1234
        - -skip-provider-button
        - -pass-access-token
        ${AUTH_BYPASS}
        ports:
        - containerPort: 20002
          name: proxy
        resources: {}
        volumeMounts:
        - mountPath: /etc/tls/private
          name: kiali-cert
      - image: ${IMAGE_NAME}:${IMAGE_VERSION}
        ${IMAGE_PULL_POLICY_TOKEN}
        name: kiali
        command:
        - "/opt/kiali/kiali"
        - "-config"
        - "/kiali-configuration/config.yaml"
        - "-v"
        - "${VERBOSE_MODE}"
        env:
        - name: ACTIVE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: SERVER_CREDENTIALS_USERNAME
          valueFrom:
            secretKeyRef:
              name: kiali
              key: username
        - name: SERVER_CREDENTIALS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kiali
              key: passphrase
        volumeMounts:
        - name: kiali-configuration
          mountPath: "/kiali-configuration"
        - name: kiali-cert
          mountPath: "/kiali-cert"
      volumes:
      - name: kiali-configuration
        configMap:
          name: kiali
      - name: kiali-cert
        secret:
          secretName: kiali-cert-secret
