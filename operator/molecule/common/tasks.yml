- name: Get Kiali CR if present
  set_fact:
    kiali_cr: "{{ lookup('k8s', api_version='kiali.io/v1alpha1', kind='Kiali', namespace=kiali.operator_namespace, resource_name=custom_resource.metadata.name) }}"

- name: Get Kiali Operator Pod
  k8s_facts:
    api_version: v1
    kind: Pod
    namespace: "{{ kiali.operator_namespace }}"
    label_selectors:
    - app = kiali-operator
  register: kiali_operator_pod

- name: Get Kiali Pod
  k8s_facts:
    api_version: v1
    kind: Pod
    namespace: "{{ istio.control_plane_namespace }}"
    label_selectors:
    - app = kiali
  register: kiali_pod

- name: Get Kiali Configmap
  set_fact:
    kiali_configmap: "{{ lookup('k8s', api_version='v1', kind='ConfigMap', namespace=istio.control_plane_namespace, resource_name='kiali') }}"

- name: Format Configmap
  set_fact:
    kiali_configmap: "{{ kiali_configmap.data['config.yaml'] | from_yaml }}"

- name: Get Kiali Deployment
  k8s_facts:
    api_version: apps/v1
    kind: Deployment
    namespace: "{{ istio.control_plane_namespace }}"
    label_selectors:
    - app = kiali
  register: kiali_deployment

- name: Get Kiali Service
  k8s_facts:
    api_version: v1
    kind: Service
    namespace: "{{ istio.control_plane_namespace }}"
    label_selectors:
    - app = kiali
  register: kiali_service

- name: Get cluster node IP that can be used to communicate to cluster services
  k8s_facts:
    api_version: v1
    kind: Node
  register: cluster_node
- set_fact:
    cluster_node_ip: "{{ cluster_node | json_query('resources[0].status.addresses[?type==`InternalIP`].address') | join() }}"
    kiali_port: "{{ kiali_service | json_query('resources[0].spec.ports[?name==`tcp`].nodePort') | join() }}"
- set_fact:
    kiali_base_url: "https://{{ cluster_node_ip }}:{{ kiali_port }}"

