
- name: Prepare
  hosts: localhost
  connection: local
  vars:
    deploy_dir: "{{ lookup('env', 'MOLECULE_PROJECT_DIRECTORY') }}/molecule/deploy"
    custom_resource: "{{ lookup('template', '/'.join([deploy_dir, kiali.cr_path])) | from_yaml }}"
  tasks:

  - name: Create Kiali Operator Namespace
    k8s:
      api_version: v1
      kind: Namespace
      name: '{{ kiali.operator_namespace }}'


  - name: Create Custom Resource Definition
    k8s:
      definition: "{{ lookup('file', '/'.join([deploy_dir, 'crd.yaml'])) }}"

  - name: Create Role
    k8s:
      definition: "{{ lookup('template', '/'.join([deploy_dir, item]))  }}"
      namespace: '{{ kiali.operator_namespace }}'
    with_items:
      - role.yaml

  - name: Create Role Binding
    k8s:
      definition: "{{ lookup('template', '/'.join([deploy_dir, item]))  }}"
      namespace: '{{ kiali.operator_namespace }}'
    with_items:
    - role_binding.yaml


  - name: Create Service Account
    k8s:
      definition: "{{ lookup('template', '/'.join([deploy_dir, item]))  }}"
      namespace: '{{ kiali.operator_namespace }}'
    with_items:
    - service_account.yaml


  - name: Create Operator Deployment
    k8s:
      definition: "{{ lookup('template', '/'.join([deploy_dir, item]))  }}"
      namespace: '{{ kiali.operator_namespace }}'
    with_items:
    - operator.yaml



  - name: Create Kiali CR
    k8s:
      namespace: '{{ kiali.operator_namespace }}'
      definition: "{{ lookup('template', '/'.join([deploy_dir, kiali.cr_path])) }}"
 

  - name: Asserting that Kiali is Deployed
    k8s_facts:
      api_version: v1
      kind: Deployment
      namespace: 'istio-system'
      label_selectors:
      - app = kiali      
    register: kiali_deployment
    until: kiali_deployment.resources |length == 1 and kiali_deployment.resources[0].status.availableReplicas is defined and kiali_deployment.resources[0].status.availableReplicas == 1
    retries: 100
    delay: 20